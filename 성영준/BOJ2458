import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());

		int[][] students = new int[n + 1][n + 1];
		int length = students.length;
		for (int i = 0; i < m; i++) {
			st = new StringTokenizer(br.readLine());
			students[Integer.parseInt(st.nextToken())][Integer.parseInt(st.nextToken())] = 1;
		}

		for (int i = 0; i < length; i++)
			students[i][0] = -1;

		int ans = 0;

		for (int i = 1; i <= n; i++)
			dfs(i, students, length);

		for (int i = 1; i < length; i++)
			for (int j = 1; j < length; j++)
				students[0][i] += students[j][i];
		n--;
		for (int i = 1; i < length; i++)
			if (students[0][i] + students[i][0] == n)
				ans++;

		System.out.println(ans);
	}

	public static void dfs(int now, int[][] students, int length) {
		if (students[now][0] != -1)
			return;

		for (int i = 1; i < length; i++) {
			if (students[now][i] == 1) {
				dfs(i, students, length);
				for (int j = 1; j < length; j++)
					students[now][j] = students[now][j] | students[i][j];
			}
		}

		int sum = 0;
		for (int i = 1; i < length; i++)
			sum += students[now][i];
		students[now][0] = sum;
	}
}
